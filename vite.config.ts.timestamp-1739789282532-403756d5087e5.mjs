// vite.config.ts
import { defineConfig as defineConfig2 } from "file:///F:/Blog2025/creative-thought-haven/node_modules/vite/dist/node/index.js";
import react from "file:///F:/Blog2025/creative-thought-haven/node_modules/@vitejs/plugin-react-swc/index.mjs";
import path from "path";
import { componentTagger } from "file:///F:/Blog2025/creative-thought-haven/node_modules/lovable-tagger/dist/index.js";

// src/lib/mdx.ts
import { defineConfig } from "file:///F:/Blog2025/creative-thought-haven/node_modules/vite/dist/node/index.js";
import mdx from "file:///F:/Blog2025/creative-thought-haven/node_modules/@mdx-js/rollup/index.js";
import remarkGfm from "file:///F:/Blog2025/creative-thought-haven/node_modules/remark-gfm/index.js";
import remarkFrontmatter from "file:///F:/Blog2025/creative-thought-haven/node_modules/remark-frontmatter/index.js";
import remarkMdxFrontmatter from "file:///F:/Blog2025/creative-thought-haven/node_modules/remark-mdx-frontmatter/dist/remark-mdx-frontmatter.js";
import rehypeSlug from "file:///F:/Blog2025/creative-thought-haven/node_modules/rehype-slug/index.js";
import rehypeAutolinkHeadings from "file:///F:/Blog2025/creative-thought-haven/node_modules/rehype-autolink-headings/index.js";
var mdxConfig = {
  remarkPlugins: [
    [remarkGfm],
    [remarkFrontmatter],
    [remarkMdxFrontmatter, { name: "metadata" }]
  ],
  rehypePlugins: [
    [rehypeSlug],
    [rehypeAutolinkHeadings]
  ],
  providerImportSource: "@mdx-js/react"
};
var mdxPlugin = () => mdx(mdxConfig);

// vite.config.ts
var __vite_injected_original_dirname = "F:\\Blog2025\\creative-thought-haven";
var vite_config_default = defineConfig2(({ mode }) => ({
  server: {
    host: "::",
    port: 8080
  },
  plugins: [
    mdxPlugin(),
    react(),
    mode === "development" && componentTagger()
  ].filter(Boolean),
  resolve: {
    alias: {
      "@": path.resolve(__vite_injected_original_dirname, "./src")
    }
  }
}));
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiLCAic3JjL2xpYi9tZHgudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJGOlxcXFxCbG9nMjAyNVxcXFxjcmVhdGl2ZS10aG91Z2h0LWhhdmVuXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCJGOlxcXFxCbG9nMjAyNVxcXFxjcmVhdGl2ZS10aG91Z2h0LWhhdmVuXFxcXHZpdGUuY29uZmlnLnRzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9GOi9CbG9nMjAyNS9jcmVhdGl2ZS10aG91Z2h0LWhhdmVuL3ZpdGUuY29uZmlnLnRzXCI7aW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSBcInZpdGVcIjtcbmltcG9ydCByZWFjdCBmcm9tIFwiQHZpdGVqcy9wbHVnaW4tcmVhY3Qtc3djXCI7XG5pbXBvcnQgcGF0aCBmcm9tIFwicGF0aFwiO1xuaW1wb3J0IHsgY29tcG9uZW50VGFnZ2VyIH0gZnJvbSBcImxvdmFibGUtdGFnZ2VyXCI7XG5pbXBvcnQgeyBtZHhQbHVnaW4gfSBmcm9tIFwiLi9zcmMvbGliL21keFwiO1xuXG4vLyBodHRwczovL3ZpdGVqcy5kZXYvY29uZmlnL1xuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKCh7IG1vZGUgfSkgPT4gKHtcbiAgc2VydmVyOiB7XG4gICAgaG9zdDogXCI6OlwiLFxuICAgIHBvcnQ6IDgwODAsXG4gIH0sXG4gIHBsdWdpbnM6IFtcbiAgICBtZHhQbHVnaW4oKSxcbiAgICByZWFjdCgpLFxuICAgIG1vZGUgPT09ICdkZXZlbG9wbWVudCcgJiZcbiAgICBjb21wb25lbnRUYWdnZXIoKSxcbiAgXS5maWx0ZXIoQm9vbGVhbiksXG4gIHJlc29sdmU6IHtcbiAgICBhbGlhczoge1xuICAgICAgXCJAXCI6IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsIFwiLi9zcmNcIiksXG4gICAgfSxcbiAgfSxcbn0pKTtcbiIsICJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiRjpcXFxcQmxvZzIwMjVcXFxcY3JlYXRpdmUtdGhvdWdodC1oYXZlblxcXFxzcmNcXFxcbGliXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCJGOlxcXFxCbG9nMjAyNVxcXFxjcmVhdGl2ZS10aG91Z2h0LWhhdmVuXFxcXHNyY1xcXFxsaWJcXFxcbWR4LnRzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9GOi9CbG9nMjAyNS9jcmVhdGl2ZS10aG91Z2h0LWhhdmVuL3NyYy9saWIvbWR4LnRzXCI7aW1wb3J0IHsgUGx1Z2luIH0gZnJvbSAndml0ZSc7XG5pbXBvcnQgeyBkZWZpbmVDb25maWcgfSBmcm9tICd2aXRlJztcbmltcG9ydCBtZHggZnJvbSAnQG1keC1qcy9yb2xsdXAnO1xuaW1wb3J0IHJlbWFya0dmbSBmcm9tICdyZW1hcmstZ2ZtJztcbmltcG9ydCByZW1hcmtGcm9udG1hdHRlciBmcm9tICdyZW1hcmstZnJvbnRtYXR0ZXInO1xuaW1wb3J0IHJlbWFya01keEZyb250bWF0dGVyIGZyb20gJ3JlbWFyay1tZHgtZnJvbnRtYXR0ZXInO1xuaW1wb3J0IHJlaHlwZVNsdWcgZnJvbSAncmVoeXBlLXNsdWcnO1xuaW1wb3J0IHJlaHlwZUF1dG9saW5rSGVhZGluZ3MgZnJvbSAncmVoeXBlLWF1dG9saW5rLWhlYWRpbmdzJztcblxuZXhwb3J0IGNvbnN0IG1keENvbmZpZyA9IHtcbiAgcmVtYXJrUGx1Z2luczogW1xuICAgIFtyZW1hcmtHZm1dIGFzIGFueSxcbiAgICBbcmVtYXJrRnJvbnRtYXR0ZXJdIGFzIGFueSxcbiAgICBbcmVtYXJrTWR4RnJvbnRtYXR0ZXIsIHsgbmFtZTogJ21ldGFkYXRhJyB9XSBhcyBhbnlcbiAgXSxcbiAgcmVoeXBlUGx1Z2luczogW1xuICAgIFtyZWh5cGVTbHVnXSBhcyBhbnksXG4gICAgW3JlaHlwZUF1dG9saW5rSGVhZGluZ3NdIGFzIGFueVxuICBdLFxuICBwcm92aWRlckltcG9ydFNvdXJjZTogJ0BtZHgtanMvcmVhY3QnXG59O1xuXG5leHBvcnQgY29uc3QgbWR4UGx1Z2luID0gKCkgPT4gbWR4KG1keENvbmZpZykgYXMgUGx1Z2luO1xuXG5leHBvcnQgY29uc3QgY29uZmlndXJlTURYID0gKCkgPT4ge1xuICByZXR1cm4gZGVmaW5lQ29uZmlnKHtcbiAgICBwbHVnaW5zOiBbbWR4UGx1Z2luKCldLFxuICAgIG9wdGltaXplRGVwczoge1xuICAgICAgaW5jbHVkZTogWydAbWR4LWpzL3JlYWN0J11cbiAgICB9XG4gIH0pO1xufTsiXSwKICAibWFwcGluZ3MiOiAiO0FBQThSLFNBQVMsZ0JBQUFBLHFCQUFvQjtBQUMzVCxPQUFPLFdBQVc7QUFDbEIsT0FBTyxVQUFVO0FBQ2pCLFNBQVMsdUJBQXVCOzs7QUNGaEMsU0FBUyxvQkFBb0I7QUFDN0IsT0FBTyxTQUFTO0FBQ2hCLE9BQU8sZUFBZTtBQUN0QixPQUFPLHVCQUF1QjtBQUM5QixPQUFPLDBCQUEwQjtBQUNqQyxPQUFPLGdCQUFnQjtBQUN2QixPQUFPLDRCQUE0QjtBQUU1QixJQUFNLFlBQVk7QUFBQSxFQUN2QixlQUFlO0FBQUEsSUFDYixDQUFDLFNBQVM7QUFBQSxJQUNWLENBQUMsaUJBQWlCO0FBQUEsSUFDbEIsQ0FBQyxzQkFBc0IsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUFBLEVBQzdDO0FBQUEsRUFDQSxlQUFlO0FBQUEsSUFDYixDQUFDLFVBQVU7QUFBQSxJQUNYLENBQUMsc0JBQXNCO0FBQUEsRUFDekI7QUFBQSxFQUNBLHNCQUFzQjtBQUN4QjtBQUVPLElBQU0sWUFBWSxNQUFNLElBQUksU0FBUzs7O0FEdEI1QyxJQUFNLG1DQUFtQztBQU96QyxJQUFPLHNCQUFRQyxjQUFhLENBQUMsRUFBRSxLQUFLLE9BQU87QUFBQSxFQUN6QyxRQUFRO0FBQUEsSUFDTixNQUFNO0FBQUEsSUFDTixNQUFNO0FBQUEsRUFDUjtBQUFBLEVBQ0EsU0FBUztBQUFBLElBQ1AsVUFBVTtBQUFBLElBQ1YsTUFBTTtBQUFBLElBQ04sU0FBUyxpQkFDVCxnQkFBZ0I7QUFBQSxFQUNsQixFQUFFLE9BQU8sT0FBTztBQUFBLEVBQ2hCLFNBQVM7QUFBQSxJQUNQLE9BQU87QUFBQSxNQUNMLEtBQUssS0FBSyxRQUFRLGtDQUFXLE9BQU87QUFBQSxJQUN0QztBQUFBLEVBQ0Y7QUFDRixFQUFFOyIsCiAgIm5hbWVzIjogWyJkZWZpbmVDb25maWciLCAiZGVmaW5lQ29uZmlnIl0KfQo=
