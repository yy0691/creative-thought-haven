// vite.config.ts
import { defineConfig as defineConfig2 } from "file:///F:/Blog2025/creative-thought-haven/node_modules/vite/dist/node/index.js";
import react from "file:///F:/Blog2025/creative-thought-haven/node_modules/@vitejs/plugin-react-swc/index.mjs";
import path from "path";
import { componentTagger } from "file:///F:/Blog2025/creative-thought-haven/node_modules/lovable-tagger/dist/index.js";

// src/lib/mdx.ts
import { defineConfig } from "file:///F:/Blog2025/creative-thought-haven/node_modules/vite/dist/node/index.js";
import mdx from "file:///F:/Blog2025/creative-thought-haven/node_modules/@mdx-js/rollup/index.js";
import remarkGfm from "file:///F:/Blog2025/creative-thought-haven/node_modules/remark-gfm/index.js";
import remarkFrontmatter from "file:///F:/Blog2025/creative-thought-haven/node_modules/remark-frontmatter/index.js";
import remarkMdxFrontmatter from "file:///F:/Blog2025/creative-thought-haven/node_modules/remark-mdx-frontmatter/dist/remark-mdx-frontmatter.js";
import rehypeSlug from "file:///F:/Blog2025/creative-thought-haven/node_modules/rehype-slug/index.js";
import rehypeAutolinkHeadings from "file:///F:/Blog2025/creative-thought-haven/node_modules/rehype-autolink-headings/index.js";
var mdxConfig = {
  remarkPlugins: [
    remarkGfm,
    remarkFrontmatter,
    [remarkMdxFrontmatter, { name: "metadata", exports: true }]
  ],
  rehypePlugins: [
    rehypeSlug,
    rehypeAutolinkHeadings
  ],
  providerImportSource: "@mdx-js/react"
};
var mdxPlugin = () => mdx(mdxConfig);

// vite.config.ts
var __vite_injected_original_dirname = "F:\\Blog2025\\creative-thought-haven";
var vite_config_default = defineConfig2(({ mode }) => ({
  server: {
    host: "::",
    port: 8080
  },
  plugins: [
    mdxPlugin(),
    react(),
    mode === "development" && componentTagger()
  ].filter(Boolean),
  resolve: {
    alias: {
      "@": path.resolve(__vite_injected_original_dirname, "./src")
    }
  }
}));
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiLCAic3JjL2xpYi9tZHgudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJGOlxcXFxCbG9nMjAyNVxcXFxjcmVhdGl2ZS10aG91Z2h0LWhhdmVuXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCJGOlxcXFxCbG9nMjAyNVxcXFxjcmVhdGl2ZS10aG91Z2h0LWhhdmVuXFxcXHZpdGUuY29uZmlnLnRzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9GOi9CbG9nMjAyNS9jcmVhdGl2ZS10aG91Z2h0LWhhdmVuL3ZpdGUuY29uZmlnLnRzXCI7aW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSBcInZpdGVcIjtcbmltcG9ydCByZWFjdCBmcm9tIFwiQHZpdGVqcy9wbHVnaW4tcmVhY3Qtc3djXCI7XG5pbXBvcnQgcGF0aCBmcm9tIFwicGF0aFwiO1xuaW1wb3J0IHsgY29tcG9uZW50VGFnZ2VyIH0gZnJvbSBcImxvdmFibGUtdGFnZ2VyXCI7XG5pbXBvcnQgeyBtZHhQbHVnaW4gfSBmcm9tIFwiLi9zcmMvbGliL21keFwiO1xuXG4vLyBodHRwczovL3ZpdGVqcy5kZXYvY29uZmlnL1xuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKCh7IG1vZGUgfSkgPT4gKHtcbiAgc2VydmVyOiB7XG4gICAgaG9zdDogXCI6OlwiLFxuICAgIHBvcnQ6IDgwODAsXG4gIH0sXG4gIHBsdWdpbnM6IFtcbiAgICBtZHhQbHVnaW4oKSxcbiAgICByZWFjdCgpLFxuICAgIG1vZGUgPT09ICdkZXZlbG9wbWVudCcgJiZcbiAgICBjb21wb25lbnRUYWdnZXIoKSxcbiAgXS5maWx0ZXIoQm9vbGVhbiksXG4gIHJlc29sdmU6IHtcbiAgICBhbGlhczoge1xuICAgICAgXCJAXCI6IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsIFwiLi9zcmNcIiksXG4gICAgfSxcbiAgfSxcbn0pKTtcbiIsICJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiRjpcXFxcQmxvZzIwMjVcXFxcY3JlYXRpdmUtdGhvdWdodC1oYXZlblxcXFxzcmNcXFxcbGliXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCJGOlxcXFxCbG9nMjAyNVxcXFxjcmVhdGl2ZS10aG91Z2h0LWhhdmVuXFxcXHNyY1xcXFxsaWJcXFxcbWR4LnRzXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ltcG9ydF9tZXRhX3VybCA9IFwiZmlsZTovLy9GOi9CbG9nMjAyNS9jcmVhdGl2ZS10aG91Z2h0LWhhdmVuL3NyYy9saWIvbWR4LnRzXCI7aW1wb3J0IHsgUGx1Z2luIH0gZnJvbSAndml0ZSc7XHJcbmltcG9ydCB7IGRlZmluZUNvbmZpZyB9IGZyb20gJ3ZpdGUnO1xyXG5pbXBvcnQgbWR4IGZyb20gJ0BtZHgtanMvcm9sbHVwJztcclxuaW1wb3J0IHJlbWFya0dmbSBmcm9tICdyZW1hcmstZ2ZtJztcclxuaW1wb3J0IHJlbWFya0Zyb250bWF0dGVyIGZyb20gJ3JlbWFyay1mcm9udG1hdHRlcic7XHJcbmltcG9ydCByZW1hcmtNZHhGcm9udG1hdHRlciBmcm9tICdyZW1hcmstbWR4LWZyb250bWF0dGVyJztcclxuaW1wb3J0IHJlaHlwZVNsdWcgZnJvbSAncmVoeXBlLXNsdWcnO1xyXG5pbXBvcnQgcmVoeXBlQXV0b2xpbmtIZWFkaW5ncyBmcm9tICdyZWh5cGUtYXV0b2xpbmstaGVhZGluZ3MnO1xyXG5pbXBvcnQgdHlwZSB7IE9wdGlvbnMgfSBmcm9tICdAbWR4LWpzL3JvbGx1cCc7XHJcblxyXG5leHBvcnQgY29uc3QgbWR4Q29uZmlnOiBPcHRpb25zID0ge1xyXG4gIHJlbWFya1BsdWdpbnM6IFtcclxuICAgIHJlbWFya0dmbSxcclxuICAgIHJlbWFya0Zyb250bWF0dGVyLFxyXG4gICAgW3JlbWFya01keEZyb250bWF0dGVyLCB7IG5hbWU6ICdtZXRhZGF0YScsIGV4cG9ydHM6IHRydWUgfV1cclxuICBdLFxyXG4gIHJlaHlwZVBsdWdpbnM6IFtcclxuICAgIHJlaHlwZVNsdWcsXHJcbiAgICByZWh5cGVBdXRvbGlua0hlYWRpbmdzXHJcbiAgXSxcclxuICBwcm92aWRlckltcG9ydFNvdXJjZTogJ0BtZHgtanMvcmVhY3QnXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgbWR4UGx1Z2luID0gKCkgPT4gbWR4KG1keENvbmZpZykgYXMgUGx1Z2luO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNvbmZpZ3VyZU1EWCA9ICgpID0+IHtcclxuICByZXR1cm4gZGVmaW5lQ29uZmlnKHtcclxuICAgIHBsdWdpbnM6IFttZHhQbHVnaW4oKV0sXHJcbiAgICBvcHRpbWl6ZURlcHM6IHtcclxuICAgICAgaW5jbHVkZTogWydAbWR4LWpzL3JlYWN0J11cclxuICAgIH1cclxuICB9KTtcclxufTsiXSwKICAibWFwcGluZ3MiOiAiO0FBQThSLFNBQVMsZ0JBQUFBLHFCQUFvQjtBQUMzVCxPQUFPLFdBQVc7QUFDbEIsT0FBTyxVQUFVO0FBQ2pCLFNBQVMsdUJBQXVCOzs7QUNGaEMsU0FBUyxvQkFBb0I7QUFDN0IsT0FBTyxTQUFTO0FBQ2hCLE9BQU8sZUFBZTtBQUN0QixPQUFPLHVCQUF1QjtBQUM5QixPQUFPLDBCQUEwQjtBQUNqQyxPQUFPLGdCQUFnQjtBQUN2QixPQUFPLDRCQUE0QjtBQUc1QixJQUFNLFlBQXFCO0FBQUEsRUFDaEMsZUFBZTtBQUFBLElBQ2I7QUFBQSxJQUNBO0FBQUEsSUFDQSxDQUFDLHNCQUFzQixFQUFFLE1BQU0sWUFBWSxTQUFTLEtBQUssQ0FBQztBQUFBLEVBQzVEO0FBQUEsRUFDQSxlQUFlO0FBQUEsSUFDYjtBQUFBLElBQ0E7QUFBQSxFQUNGO0FBQUEsRUFDQSxzQkFBc0I7QUFDeEI7QUFFTyxJQUFNLFlBQVksTUFBTSxJQUFJLFNBQVM7OztBRHZCNUMsSUFBTSxtQ0FBbUM7QUFPekMsSUFBTyxzQkFBUUMsY0FBYSxDQUFDLEVBQUUsS0FBSyxPQUFPO0FBQUEsRUFDekMsUUFBUTtBQUFBLElBQ04sTUFBTTtBQUFBLElBQ04sTUFBTTtBQUFBLEVBQ1I7QUFBQSxFQUNBLFNBQVM7QUFBQSxJQUNQLFVBQVU7QUFBQSxJQUNWLE1BQU07QUFBQSxJQUNOLFNBQVMsaUJBQ1QsZ0JBQWdCO0FBQUEsRUFDbEIsRUFBRSxPQUFPLE9BQU87QUFBQSxFQUNoQixTQUFTO0FBQUEsSUFDUCxPQUFPO0FBQUEsTUFDTCxLQUFLLEtBQUssUUFBUSxrQ0FBVyxPQUFPO0FBQUEsSUFDdEM7QUFBQSxFQUNGO0FBQ0YsRUFBRTsiLAogICJuYW1lcyI6IFsiZGVmaW5lQ29uZmlnIiwgImRlZmluZUNvbmZpZyJdCn0K
