export const claudeThinkContent = `
# think工具

## 目录

\- 实现方式

\- 性能评估结果

\- 最佳使用场景

\- 实施建议

\## 核心概念与定义

"think"工具是Anthropic为Claude开发的一种简单而强大的功能，让AI可以在复杂任务解决过程中拥有专门的思考空间。这与Claude的"extended thinking"功能有所不同：

\- Extended thinking：Claude在开始生成回应前的深度思考过程

\- "think"工具：Claude在生成回应过程中的额外步骤，用于停下来思考是否已获取足够信息继续前进

"think"工具特别适用于Claude需要处理外部信息（如工具调用结果）的场景，更聚焦于模型在发现新信息后的思考过程。

\## 实现方式

标准实现示例：

\`\`\`
{
  "name": "think",
  "description": "使用此工具进行思考。它不会获取新信息或改变数据库，只是将思考内容添加到日志中。在需要复杂推理或缓存记忆时使用。",
  "input_schema": {
​    "type": "object",
​    "properties": {
​      "thought": {
​        "type": "string",
​        "description": "思考的内容。"
​      }
​    },
​    "required": ["thought"]
  }
}
\`\`\`

\## 性能评估结果

研究使用τ-bench（tau-bench）基准测试评估了"think"工具的效果，该测试模拟了真实客服场景中的工具使用能力。

\### 航空领域测试结果：

\- 基准线（无"think"工具）：pass^1得分为0.370

\- "think"工具+优化提示：pass^1得分为0.570，相对提升54%

\### 零售领域测试结果：

\- 基准线：pass^1得分为0.783

\- "think"工具（无额外提示）：pass^1得分为0.812

\### SWE-Bench测试：

\- 在软件工程基准测试中，添加"think"工具帮助Claude 3.7 Sonnet达到了0.623的领先成绩

\- 隔离实验显示，仅添加此工具平均提高了1.6%的性能

\## 最佳使用场景

"think"工具在以下情况下效果最佳：

1. 工具输出分析：需要仔细处理前序工具调用输出，可能需要回溯的场景
2. 政策繁重环境：需要遵循详细指导并验证合规性的场景
3. 顺序决策制定：每个行动都建立在前一个基础上且错误代价高昂的场景

\## 实施建议

1. 战略性提示与领域特定示例：

   \- 提供清晰的使用指导

   \- 包含针对特定用例的详细示例

   \- 展示如何分解复杂指令和建立决策树

2. 将复杂指导放在系统提示中：

   \- 长或复杂的指令放在系统提示而非工具描述中更有效

3. 不推荐使用场景：

   \- 非顺序工具调用（单次或并行调用）

   \- 简单指令遵循（约束少且默认行为足够好）

\## 实施步骤

1. 在复杂工具使用场景中测试
2. 添加自定义的"think"工具定义
3. 监控使用模式并优化提示

![img_v3_02kk_38dbde94-a49b-40b8-a67c-278ca95bf5eg](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/AiNews/img_v3_02kk_38dbde94-a49b-40b8-a67c-278ca95bf5eg.jpg)
`