export const PromptEngineering = `
这是由Lee Boonstra 等 Google 团队成员联合编写的《**Prompt Engineering**》提示词工程。

长达 60+ 页的 PDF详细介绍如何通过设计高质量的提示来优化大语言模型（LLM）的输出。

文档面向广泛的读者群体，无需具备数据科学或机器学习背景即可掌握提示工程，同时聚焦于使用Google的Gemini模型（通过Vertex AI或API）进行实践。

- **作者**：Lee Boonstra 等 Google 团队成员
- **定位**：面向使用 Vertex AI / Gemini / 通用 LLM 的开发者，深入讲解如何写出优质 prompt、配置模型参数、调试与优化提示结构等技巧
- **应用范围**：适用于自然语言处理、AI 代码生成、多模态输入、结构化输出、复杂推理等


**目录**

- **Prompt Engineering 的基础理念**
- **模型输出控制参数（Token / Temperature / Top-K/Top-P）详解**
- **提示词类型与结构构建方法**
- **核心提示技巧（Zero-shot, CoT, ReAct, ToT, Self-Consistency 等）**
- **代码生成相关提示策略**
- **自动提示生成（APE）机制**
- **多模态提示支持（图+文输入）**
- **最佳实践清单**
- **典型模板示例与用法建议**



**✅ 第一节：Prompt Engineering 的核心理念**

**📌 核心观点**

- **大语言模型（LLM）是“预测型引擎”**：它根据上下文预测下一个 token，而不是“理解”语义
- **提示词（Prompt）决定模型的输出方向与质量**
- 好的 Prompt 可以“激活”模型的知识、结构化其输出，提升可控性



**🧠 Prompt Engineering 的目标是：**

1. **提出明确任务**
2. **引导模型产生可控、有用的输出**
3. **降低错误/幻觉风险**
4. **提高输出一致性与格式正确率**



**✨ 为什么提示词如此重要？**

![img_v3_02l8_c9850062-2160-4645-88ad-374c6c6d8a5g](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_c9850062-2160-4645-88ad-374c6c6d8a5g.jpg)



**🔍 实际问题举例：**

![img_v3_02l8_075294ac-5b86-4216-8292-2196dd13aacg](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_075294ac-5b86-4216-8292-2196dd13aacg.jpg)



**💡 提示词可以做的事情包括：**

![img_v3_02l8_93783402-0820-4f4a-9853-ea8c77d4933g](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_93783402-0820-4f4a-9853-ea8c77d4933g.jpg)



**✅ 第二节：模型采样参数详解**

![img_v3_02l8_19b595ae-00d2-4418-9af7-16865614109g](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_19b595ae-00d2-4418-9af7-16865614109g.jpg)



⚠️ 过低温度会导致输出单调，过高温度则容易陷入“重复循环 bug”。

🧮 掌控生成式模型输出的“温度计与水龙头”

![img_v3_02l8_3d747853-acee-4d7b-906b-857a8008c36g](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_3d747853-acee-4d7b-906b-857a8008c36g.jpg)



**🔧 1. Max Tokens（最大生成长度）**

- 控制模型最多能输出多少个 token（不是字数！）
- 1K tokens ≈ 750 词 ≈ 1~2 页文字
- 设置过小会**截断结果**，设置过大**浪费成本或时间**

**✅ 建议：**

![img_v3_02l8_18c082e6-307e-46ca-848c-acdcd1c900eg](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_18c082e6-307e-46ca-848c-acdcd1c900eg.jpg)



**🔥 2. Temperature（温度）**

**控制模型输出的随机性 / 创造性程度**

- 范围：0 ~ 2（大多数平台为 0.0 ~ 1.0）
- 越接近 **0**：输出更稳定、保守（适合结构化任务）
- 越接近 **1**：输出更发散、更有创意（适合写作、头脑风暴）

![img_v3_02l8_f7c6283c-5aea-4dff-b1e2-2fecb7690f7g](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_f7c6283c-5aea-4dff-b1e2-2fecb7690f7g.jpg)



**🎲 3. Top-K（采样上限）**

- 限制模型在预测下一个 token 时，只考虑概率最高的前 K 个选项
- 举例：
  - top-k = 1：只考虑概率最高的 token（非常确定）
  - top-k = 40：从概率最高的前 40 个 token 中采样

→ 增加 top-k 会让输出更加多样，但稳定性降低。

**🎯 4. Top-P（核采样 / 多样性过滤）**

- 不是按数量，而是按**累计概率总和**
- 例如 top-p = 0.9 表示只考虑概率总和达到 90% 的 token
- 适合控制“安全且多样”的输出范围



**🧪 推荐组合设定（实用模板）：**

![img_v3_02l8_82051cba-f697-478c-976a-2ea28676bbeg](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_82051cba-f697-478c-976a-2ea28676bbeg.jpg)



**📌 提醒：**

- **不要同时开启 Temperature、Top-k、Top-p 全部设为高值** → 输出极不稳定
- **对于多轮对话任务，建议固定采样参数，避免风格跳变**



**✅ 第三节：提示词结构与类型全解析**

🎭 **让模型“听懂你”的艺术表达**

提示词（Prompt）不只是“问一个问题”，它更像是**一段剧本 + 指令 + 示例 + 角色设定**的组合。结构设计得越清晰，模型的响应就越接近你想要的。

**🧩 1、提示词的常见结构层级**

![img_v3_02l8_bb3b2320-91f5-4113-be0c-7bf484c6d41g](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_bb3b2320-91f5-4113-be0c-7bf484c6d41g.jpg)



**📘 2、系统提示词（System Prompt）**

**决定“模型扮演什么角色”**

- 类似“隐藏指导语”
- 适用于 Gemini、ChatGPT、Claude 等对话型模型

示例：

\`\`\`
你是一个专业的法律顾问。你必须根据用户提供的合同内容，指出潜在风险，并用 JSON 格式返回建议。
\`\`\`

🔧 提示模板结构建议：

> “你是一个【专业角色】，你的任务是【目标】。请按照以下格式输出：…”

**🧠 3、用户提示 + 上下文输入（User Prompt + Context）**

- 用户问题可以很自由，但建议使用清晰的语言
- 上下文输入通常附在前面或后面（如文档、历史对话、搜索结果等）

示例：

\`\`\`
以下是产品 FAQ 文档。请根据这些内容，回答用户提出的问题，保持一致的语气：
---
FAQ 内容...
---
问题：该产品适合孕妇使用吗？
\`\`\`

**🧪 4、Few-shot 示例（示例提示）**

在 Prompt 中提供 1~5 个「问题-答案」对，引导模型模仿输出格式与逻辑。

示例：

\`\`\`
Q: 请将以下句子翻译成法语：我喜欢猫。
A: J'aime les chats.

Q: 请将以下句子翻译成法语：天气真好。
A:
\`\`\`

📌 适合场景：

- 分类任务
- 文本转结构
- 多语言处理
- 数据标准化



**📦 5、输出格式指令（明确格式结构）**

LLM 默认是自由输出的，需要你**明确告诉它格式要求**！

好的指令例子：

- “请用 JSON 返回：{风险点: string, 建议: string[]}”
- “用 Markdown 格式列出标题、摘要和关键词”
- “按 bullet list 输出，最多列出 5 项”



**🔥 6、提示词写作风格建议**

![img_v3_02l8_2239f976-43b3-4c1e-a4bc-e9ca94a39cfg](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_2239f976-43b3-4c1e-a4bc-e9ca94a39cfg.jpg)



**✅ 第四节：核心提示技巧汇总**

🧠 解锁高级提示策略，提升 LLM 推理与稳定能力

这一节汇集了目前主流的大语言模型提示技巧，包括结构引导、思维链、行动-推理结合等，适用于各种需要**逻辑、步骤、计划、搜索调用**等能力的任务。

**1️⃣ Zero-shot / One-shot / Few-shot Prompting**

![img_v3_02l8_c17533a2-4d5c-49ab-9060-8cd5461e2d3g](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_c17533a2-4d5c-49ab-9060-8cd5461e2d3g.jpg)



✅ **适用**：分类任务、风格模仿、结构化输出、信息提取等

🔍 提示模板结构：

\`\`\`
Q1: [输入] → A1: [输出]
Q2: [输入] → A2: [模型自动推理]
\`\`\`

**2️⃣ Chain-of-Thought Prompting（CoT）**

💭 引导模型“逐步推理” → 提高逻辑推理任务准确率（尤其数学/逻辑问题）

示例：

\`\`\`
问题：Lily 有 3 个苹果，她又买了 2 个，现在她有多少个？

我们一步一步地思考：

1. 她最初有 3 个
2. 她买了 2 个
3. 总共有 3 + 2 = 5

答案是：5
\`\`\`

📌 适合：

- 算数题
- 因果逻辑
- 多步判断题



**3️⃣ Self-Consistency Prompting（多路径思考+投票）**

💡 思路：

- 用 CoT 方法生成多个解答路径
- 让模型尝试 5~10 次不同推理方式
- 最后统计哪个答案出现频率最高（即投票）作为最终输出

📈 实测准确率大幅提升（如数学问答任务中）

**4️⃣ Tree of Thoughts（ToT）**

🌳 类似“搜索树”，让模型并行展开多个解路径，再从中评估最优方案

示例流程：

\`\`\`
思考目标：在预算内规划一个去东京的行程

分支A：
  → 飞机 A，酒店 A，地铁交通 → 总价：$800
分支B：
  → 飞机 B，胶囊酒店，步行 + 巴士 → 总价：$670
分支C：
  → 高级飞行，五星酒店 → 总价：$1500（超预算）

选择最优：分支B
\`\`\`

✅ 适合：

- 规划类任务（旅游、日程、预算）
- 决策生成类任务（推荐系统）



**5️⃣ ReAct Prompting（Reasoning + Acting）**

🤖 模型不仅“思考”，还能“行动”（例如查找信息、调用工具）

结构：

\`\`\`
Thought: 我需要找出2022年世界人口排名前5的国家
Action: 搜索("2022 世界人口排名")
Observation: 找到结果：中国、印度、美国、印度尼西亚、巴西
Final Answer: 中国、印度、美国、印度尼西亚、巴西
\`\`\`

🔧 ReAct 可与工具链结合（如搜索、计算、数据库查询）

🔁 适合 Agent 架构、大模型工具化系统（LangChain、Gemini Agents）

**6️⃣ Step-back Prompting（先泛后专）**

💬 先让模型给出“大致理解”，再细化任务

示例：

\`\`\`
任务：写一篇关于人工智能在教育领域的影响

第一步：请先列出人工智能如何影响教育的 5 个方面
→ 模型列举：个性化学习、自动评分、虚拟教师…

第二步：请围绕“个性化学习”写一段介绍性文章
\`\`\`

📌 好处：

- 降低幻觉、增强上下文引导
- 适合多段生成、复杂内容铺垫



**✅ 总结对比表**

![img_v3_02l8_3df21bcb-8e01-49aa-8da3-3b759b599d6g](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_3df21bcb-8e01-49aa-8da3-3b759b599d6g.jpg)



**✅ 第五节：代码相关提示技巧（Code Prompting）**

💻 提升代码生成质量与可维护性的实用提示工程

大语言模型（LLM）在编程任务中表现出色，但**提示词设计仍是成功生成关键**。本节总结如何利用 Prompt 高效实现：

- 自动生成代码
- 翻译跨语言代码
- 修复/解释报错
- 分步骤构建程序逻辑



**1️⃣ 明确设定语言、框架与目的**

**最常见失败点**是 prompt 没说清楚「我想要哪种语言、结构、框架」。

💡 示例模板：

\`\`\`
请用 Python 编写一个函数，功能是将输入的日期字符串（格式 yyyy-mm-dd）转换为星期几。
\`\`\`

📌 建议指明：

- 编程语言（Python / JavaScript / Bash…）
- 结构期望（函数 / 类 / 脚本 / 模块）
- 限制条件（性能、兼容性、库依赖）



**2️⃣ 代码生成 + 测试数据一并输出**

让模型同时生成 **主函数 + 示例调用 + 测试用例**，提高可验证性。

示例 Prompt：

\`\`\`
请用 JavaScript 写一个函数，将数组中的数字排序。并提供两个测试用例。
\`\`\`

模型输出：

\`\`\`
function sortArray(arr) {
  return arr.sort((a, b) => a - b);
}
// Test Cases
console.log(sortArray([4, 2, 7]));  // [2, 4, 7]
console.log(sortArray([9, 1, 5]));  // [1, 5, 9]
\`\`\`

**3️⃣ 跨语言翻译提示**

示例：

\`\`\`
以下是一个用 Python 写的冒泡排序，请将其翻译成 JavaScript。
[插入 Python 代码]
\`\`\`

📌 用于多平台开发、低代码平台转换等场景

**4️⃣ 逐行解释代码（Explain Code）**

适用于教学场景、团队协作或 Debug 帮助

示例：

\`\`\`
请逐行解释以下 Python 函数的含义，并说明每行的作用。
[插入函数]
\`\`\`

模型返回：

\`\`\`
第1行：定义函数 \`check_even\`，接收一个参数 \`num\`。
第2行：使用模运算检查 \`num\` 是否能被 2 整除
\`\`\`


**5️⃣ 修复提示（Code Debugging）**

加入错误提示与报错信息，LLM 会辅助定位并修复 bug。

示例 Prompt：

\`\`\`
以下代码报错了，请帮我找出原因并修复。错误信息：TypeError: cannot concatenate str and int
[插入代码]
\`\`\`

**6️⃣ 结构化输出 + 自动格式说明**

用 JSON / Markdown / 分段说明结构，引导模型输出更标准、更易处理的代码。

示例 Prompt：

\`\`\`
请用 Markdown 格式返回：
- ✅ 代码块
- 📌 每段代码说明
- ✅ 测试数据
\`\`\`

**✅ 小技巧合集**

![img_v3_02l8_68cc1b15-1bc8-4d22-ba2d-3b81f829de5g](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_68cc1b15-1bc8-4d22-ba2d-3b81f829de5g.jpg)



**🧩 代码类提示推荐结构模板：**

\`\`\`
你是一位资深[语言]开发者。
请根据以下描述编写一段[语言]代码，要求如下：
- 功能：...
- 输入：...
- 输出：...
- 返回格式：[Markdown / JSON / 函数块]
\`\`\`

**✅ 第六节：自动提示生成（APE, Auto Prompt Engineering）**

🤖 用大语言模型来「写提示词」的高级自动化方法

在许多任务中，Prompt 的编写不仅费时，而且容易受主观影响。**自动提示生成（APE）**是指使用模型自身或工具链，**自动生成、优化、筛选提示词**，提高开发效率与模型性能。

**🎯 核心目标**

1. 自动生成多个候选 Prompt
2. 用 LLM 模拟任务执行结果
3. 评估每个 Prompt 的表现（用模型或评分函数）
4. 选择最优 Prompt 自动应用或微调



**🧩 APE 的四步典型流程**

![img_v3_02l8_5ef90138-4feb-4085-9d99-d1a5eecc607g](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_5ef90138-4feb-4085-9d99-d1a5eecc607g.jpg)



**📦 典型示例应用场景**

🧾 文本摘要任务

目标：让模型总结长文本

1. 预定义 5 种 Prompt 模板（如“请总结为3句话”、“写一段 150 字的摘要”…）
2. 对一批真实新闻文本跑 Prompt → 输出摘要
3. 用 GPT-4 或人工标注标准摘要 → 对比 BLEU/ROUGE 分数
4. 选出得分最稳定的提示词模版



**🧠 为什么 APE 有效？**

- 复杂任务的 Prompt 很难靠直觉设计
- LLM 能捕捉人类提示设计逻辑，甚至生成比人写得更好的版本
- 特别适合提示“需要反复尝试 + 比较”的任务，如多步规划、结构提取



**✅ APE 推荐应用场景**

![img_v3_02l8_c4afa41d-d763-4ff9-ac88-e17542166e1g](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_c4afa41d-d763-4ff9-ac88-e17542166e1g.jpg)



**🛠️ APE 实施建议（实用技巧）**

- 用一个“Prompt 生成 Prompt”的 Prompt（Prompt Inception 😄）：

\`\`\`
请为以下任务设计 3 个不同风格的高质量提示词，用于引导大模型正确生成摘要。
任务：给定一个产品说明书，让模型总结其优缺点。
\`\`\`

- 用 evalLLM、GPT Judge 等方式自动评价每个提示词效果
- 将 Prompt 封装成版本/模块 → 自动 A/B 测试选择最优



**🧠 APE 与传统 Prompt 的区别**

![img_v3_02l8_d09ecaad-2d2d-4e87-99b0-61c1730e32cg](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_d09ecaad-2d2d-4e87-99b0-61c1730e32cg.jpg)



**✅ 第七节：多模态提示（Multimodal Prompting）**

🖼️🔤 用图 + 文一起构建更强大的模型交互方式

随着 Vision-Language 模型（如 Gemini、GPT-4V、Grok Vision）的出现，提示工程已经从“文字控制文字”扩展到**图文混合输入输出**。本节总结如何高效构建多模态提示，适用于图像问答、视觉分析、OCR、视频摘要等场景。

**🧠 什么是多模态提示？**

> **多模态提示** = 把图像 + 文字输入给 LLM，让模型综合理解视觉 + 语言上下文，生成结构化或自由表达的输出。

**📸 常见模态组合类型**

![img_v3_02l8_ada03eab-c809-4c65-8908-a2dbbf2adceg](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_ada03eab-c809-4c65-8908-a2dbbf2adceg.jpg)



**🔧 多模态提示的结构设计**

✅ 推荐结构模板：

\`\`\`
任务描述：
请你根据以下图片内容回答问题 / 提取信息。

图片（image-1.jpg）：
[上传或 Base64 编码图像]

问题：
这个图中有几个小动物？它们在做什么？
\`\`\`

📌 大多数模型支持的图片格式：

- JPG、PNG
- 最大建议：2MB，2048×2048 分辨率以下
- 部分平台用 Markdown 风格插图或 base64 嵌入



**🧪 应用场景示例**

1️⃣ 图像问答（Visual Question Answering）

> 给一张漫画图，问“这个人在做什么？情绪如何？”
>
> → 模型返回：“正在挥手告别，情绪伤感。”

2️⃣ 表格/截图解析（OCR + 推理）

> 上传会议安排截图，问：“第一个讲者是谁？几点开始？”
>
> → 模型提取并解析图中文字结构

3️⃣ 文档理解（PDF 页面截图 + 指令）

> “请总结这页内容，并列出关键日期。”
>
> → 可配合表格提取、日期识别能力

4️⃣ 视频摘要（选取帧图 + 描述视频节奏）

> 给视频关键帧截图 + 问题：“这段广告想传达什么？”
>
> → 模型从视觉语义与广告风格总结意图

**🖼️ 多模态提示技巧建议**

![img_v3_02l8_f3914207-7aab-4477-a820-d42ff1130bfg](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_f3914207-7aab-4477-a820-d42ff1130bfg.jpg)



**🤖 多模态 LLM 支持能力对比（简略）**

![img_v3_02l8_63f73837-2a77-4488-973e-7b1025916cag](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_63f73837-2a77-4488-973e-7b1025916cag.jpg)



**🔍 多模态提示未来方向**

- 支持视频 + 音频输入（多步理解）
- 模型输出结构更可控（格式 + 模板 + 交互）
- Prompt + 图表布局控制（用于 UI、PPT、设计）

好的，我们进入：

**✅ 第八节：Prompt Engineering 最佳实践清单**

📋 专业级提示工程师日常使用的结构、技巧与思维模式总结

本节总结整本白皮书的提示工程通用策略、实用建议、错误避免方案，帮助你在实际工作中构建**准确、稳定、可控、可维护**的高质量提示。

**🎯 一、Prompt 设计的总目标**

1. **让 LLM 明白你要干什么**
2. **降低输出“幻觉”、“乱写”概率**
3. **提升结构清晰度，利于二次处理**
4. **兼容不同模型，具有迁移性**



**🧩 二、提示结构推荐模板（实战结构）**

\`\`\`
【系统角色】你是一个...（医生 / 法律顾问 / 产品经理）

【背景信息】以下是用户输入/上下文资料

【具体任务】请根据内容执行：
1. xxx
2. xxx

【输出要求】
- 使用 [JSON / Markdown / 段落] 输出
- 不得捏造信息，保持简洁
\`\`\`

**📦 三、实用建议 Checklist（提示写作时请注意）**

![img_v3_02l8_80c2a206-f042-483f-bfd5-69fae94031ag](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_80c2a206-f042-483f-bfd5-69fae94031ag.jpg)



**❌ 四、常见错误与优化方式**

![img_v3_02l8_64db8043-0bdd-40c9-b650-1c83841ad8cg](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newimg_v3_02l8_64db8043-0bdd-40c9-b650-1c83841ad8cg.jpg)



**🛠️ 五、维护提示词库的建议**

- 为每个 prompt 编写说明与用途
- 加版本号（v1.0, v2.1），便于回滚与迭代
- 用变量模板化（如 {产品名}），支持动态注入上下文
- 分类管理（问答类 / 总结类 / 营销类 / 技术分析类）



**✅ Prompt Debugging 思维模型**

当模型输出不如预期时，请思考：

![img_v3_02l8_f8b90682-2772-410f-86f3-8290cd44b57g](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_f8b90682-2772-410f-86f3-8290cd44b57g.jpg)



**🧠 实操建议：写 Prompt 像写 API 说明书**

- 输入（input）说明清晰
- 输出（output）结构明确
- 限定功能边界
- 举例说明



**✅ 第九节：典型 Prompt 模板库与多场景应用建议**

📚 快速上手 + 高复用 + 适配常见任务的 Prompt 设计集

本节收录了白皮书中的实用模板结构，覆盖常见 LLM 应用场景，帮助你快速构建高质量提示，支持直接套用或参数化集成。

**📌 1、分类汇总：9 大高频场景模板**

![img_v3_02l8_3133d3c3-0b92-48bb-9432-d25b12e532eg](https://jsd.onmicrosoft.cn/gh/yy0691/img-bed@main/Blog/Ai_Newsimg_v3_02l8_3133d3c3-0b92-48bb-9432-d25b12e532eg.jpg)



**📝 2、标准 Prompt 模板结构库**

1️⃣ 文本总结（Summarization）

\`\`\`
请根据以下内容写出一段 150 字的摘要。突出要点，保持语言简洁。

内容：
"""
[粘贴文本]
"""
\`\`\`

2️⃣ 信息抽取（Information Extraction）

\`\`\`
请从以下文本中提取结构化数据，并用 JSON 格式返回。字段包括：事件名、时间、地点、参与人。

文本：
"""
[原始段落]
"""
\`\`\`

3️⃣ 多语言翻译（Translation）

\`\`\`
请将下列内容翻译为法语，保持原句语气和敬语。

内容：
"""
今天会议将于下午3点开始，请准时参加。
"""
\`\`\`

4️⃣ 文案写作（Creative Copywriting）

\`\`\`
你是一位科技品牌文案撰写者。请根据以下产品简介写出一条简洁、鼓舞人心的宣传语，最多 25 个字，适合社交媒体使用。

产品介绍：
[产品描述]
\`\`\`

5️⃣ 表格抽取与转换

\`\`\`
请将以下文本内容转换为 JSON 表格，每行为一个对象，字段为 name、age、department。

文本：
Alice, 32, Marketing  
Bob, 28, Engineering  
\`\`\`

**🎯 3、Prompt 模板参数化建议**

为了便于在系统中反复调用，建议使用变量占位结构：

\`\`\`
你是一个专业的{角色}，请根据以下{输入类型}，完成{任务目标}。

请以{格式}格式返回，并确保输出不超过{字数}。
\`\`\`

可以结合 UI 界面 / API 动态生成 Prompt。

**🔁 4、Prompt 模板与产品集成建议**
`